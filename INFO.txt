Wstępnie podzieliłem strukturę programu, jakby ktoś miał jakieś pomysły jak coś usprawnić to śmiało można zmienić.

Proponowana struktura programu:
	main.py 		   - w nim będzie tylko uruchamiany program
	gui.py 			   - gui programu (możliwość wyboru poszczególnych metod mutacji, selekcji itd)
	genetic_algorithm.py       - zawiera schemat algorytmu genetycznego wraz z wszystkimi potrzebnymi funkcjami (np. fun dopasowania itp.)
	crossover.py		   - zawiera metody krzyżowania
	mutation.py		   - zawiera metody mutacji
	population_initialization  - zawiera metody inicjalizowania populacji

Komentarze:
	Część rzeczy wstępnie ponazywałem i dodałem, ale oczywiście można je pozmieniać jak komuś by inna nazwa bardziej pasowała.
	Zasugerowałbym tylko żeby nie używać jakoś mocno skrótowców jeżeli chodzi o nazwy w sensie 
	przykładowo mut_sel, mutation_sel zamiast mutation_selection, fajnie jakby to było self-explanatory (łatwiej to się będzie czytać
	i nikt nie będzie musiał się domyślać o co w danej funkcji chodzi).

	Wydaje mi się, że nazwę pliku można by traktować jako takiego ala namespace'a, bo wydaje mi się, że nie ma jakiegoś
	większego sensu robić wszystkiego klasowo w jednym pliku. Wtedy możemy zaimportować cały plik i odwoływać się do wybranej funkcji
	przykładowo w ten sposób (import selection, selection.roulette_wheel()) i wtedy w nazwie funkcji nie trzeba dodawać
	słowa selection, bo to wynika z nazwy pliku (i dodatkowo zmniejszy to ilość merge conflictów, bo nie będziemy aż tak
	operować na tych samych plikach).

	Zastanawiałem się jak można by pisać poszczególne funkcje, żeby uniknąć później przekładania wszystkich metod na opcję z figurami
	geometrycznymi, gdyby taka opcja zaistniała...